
/*
 * 
 */

package cn.p.dt.union;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.2.4
 * Wed Feb 16 13:06:46 CST 2011
 * Generated source version: 2.2.4
 * 
 */


@WebServiceClient(name = "PartnerRegService", 
                  wsdlLocation = "http://dt.p.cn/union/PartnerRegService.asmx?WSDL",
                  targetNamespace = "http://dt.p.cn/union/") 
public class PartnerRegService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://dt.p.cn/union/", "PartnerRegService");
    public final static QName PartnerRegServiceSoap = new QName("http://dt.p.cn/union/", "PartnerRegServiceSoap");
    public final static QName PartnerRegServiceSoap12 = new QName("http://dt.p.cn/union/", "PartnerRegServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://dt.p.cn/union/PartnerRegService.asmx?WSDL");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from http://dt.p.cn/union/PartnerRegService.asmx?WSDL");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public PartnerRegService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PartnerRegService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PartnerRegService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns PartnerRegServiceSoap
     */
    @WebEndpoint(name = "PartnerRegServiceSoap")
    public PartnerRegServiceSoap getPartnerRegServiceSoap() {
        return super.getPort(PartnerRegServiceSoap, PartnerRegServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PartnerRegServiceSoap
     */
    @WebEndpoint(name = "PartnerRegServiceSoap")
    public PartnerRegServiceSoap getPartnerRegServiceSoap(WebServiceFeature... features) {
        return super.getPort(PartnerRegServiceSoap, PartnerRegServiceSoap.class, features);
    }
    /**
     * 
     * @return
     *     returns PartnerRegServiceSoap
     */
    @WebEndpoint(name = "PartnerRegServiceSoap12")
    public PartnerRegServiceSoap getPartnerRegServiceSoap12() {
        return super.getPort(PartnerRegServiceSoap12, PartnerRegServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PartnerRegServiceSoap
     */
    @WebEndpoint(name = "PartnerRegServiceSoap12")
    public PartnerRegServiceSoap getPartnerRegServiceSoap12(WebServiceFeature... features) {
        return super.getPort(PartnerRegServiceSoap12, PartnerRegServiceSoap.class, features);
    }

}
