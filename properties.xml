<?xml version="1.0" encoding="UTF-8"?>
<project>
	<!-- Directory structure of the project -->
	<property name="build.dir" value="${basedir}/build" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="3partlibs.dir" value="${basedir}/lib/3partlibs" />
	<property name="open-cvs.dir" value="${basedir}/lib/opencsv-1.8" />
	<property name="interface.dir" value="${basedir}/lib/interface" />
	<property name="druid.dir" value="${basedir}/lib/druid-1.1.0" />
	<property name="alisms.dir" value="${basedir}/lib/alisms"/>
	<property name="ups.dir" value="${basedir}/lib/ups" />
	<property name="cxf.dir" value="${basedir}/lib/cxf" />
	<property name="jee.dir" value="${basedir}/lib/jee_lib" />
	<property name="mq.dir" value="${basedir}/lib/mq" />
	<property name="jbossclient.dir" value="${basedir}/lib/jboss_client" />
	<property name="bill99.dir" value="${basedir}/lib/99bill" />
	<property name="bill99ms.dir" value="${basedir}/lib/99billms" />
	<property name="alipay.dir" value="${basedir}/lib/alipay" />
	<property name="tenpay.dir" value="${basedir}/lib/tenpay" />
	<property name="hitrust.dir" value="${basedir}/lib/hitrust" />
	<property name="usPay.dir" value="${basedir}/lib/usPay" />
	<property name="InforReport.dir" value="${basedir}/lib/InforReport" />
	<property name="jasypt.dir" value="${basedir}/lib/jasypt" />
	<property name="freemarker.dir" value="${basedir}/lib/freemarker" />
	<property name="smsSDK.dir" value="${basedir}/lib/smsSDK-1.0" />
	<property name="smssend.dir" value="${basedir}/lib/smssend-2.0.3" />
	<property name="chinapnr.dir" value="${basedir}/lib/chinapnr" />
	<property name="yspay.dir" value="${basedir}/lib/yspay" />
	<property name="httpmsg.dir" value="${basedir}/lib/httpmsg"/>
	<property name="beanutils.dir" value="${basedir}/lib/commons-beanutils" />
	<property name="wecs-ups.dir" value="${basedir}/lib/wecs-ups" />
	<property name="test.dir" value="${build.dir}/test" />
	<property name="dwr.dir" value="${basedir}/lib/dwr-1.1.1" />
	<!-- Directories for code coverage sampling -->
	<property name="coverage.dir" value="${test.dir}/coverage" />
	<property name="out.instr.dir" value="${test.dir}/outinstr" />
	<property name="prizetags.dir" value="${basedir}/lib/prizetags" />
	<property name="fckeditor.dir" value="${basedir}/lib/fckeditor 2.4" />
	<!-- Default options for code-generation, compiling and junit-testing -->
	<property name="javac.debug" value="true" />
	<property name="compile.deprecation" value="true" />
	<!-- build.compiler - seems to be issues using jikes and JDK 1.4 is just as fast-->
	<property name="build.compiler" value="modern" />
	<property name="junit.fork" value="true" />
	<property name="junit.showoutput" value="true" />
	<property name="xdoclet.force" value="false" />

	<!-- Library versions and JARs -->
	<property name="lib.dir" location="lib" />
	<property file="${lib.dir}/lib.properties" />

	<!-- Load user overrides -->
	<property file="${user.home}/.${ant.project.name}-build.properties" />
	<property file="${user.home}/.build.properties" />
	<property file="build.properties" />
	<property file="web/WEB-INF/classes/mail.properties" />

	<!-- Application options that will likely vary between applications -->
	<property name="http.port" value="8080" />
	<property name="dao.type" value="hibernate" />
	<property name="jsp.2" value="false" />
	<property name="jsp.precompile" value="false" />

	<!-- Properties for running unit tests with tomcat -->
	<property name="tomcat.server" value="localhost" />
	<property name="tomcat.manager.url" value="http://${tomcat.server}:${http.port}/manager" />
	<property name="tomcat.username" value="admin" />
	<property name="tomcat.password" value="admin" />

	<!-- Defaults for database.properties -->
	<property name="database.jar" location="${mysql.jar}" />
	<property name="database.type" value="mysql" />
	<property name="database.name" value="jecs" />
	<property name="database.host" value="localhost" />
	<property name="database.username" value="test" />
	<property name="database.password" value="test" />

	<!-- database URL for creating other dbs - used in db-create target -->
	<property name="database.admin.url" value="jdbc:${database.type}://${database.host}/mysql" />
	<property name="database.admin.username" value="root" />
	<property name="database.admin.password" value="" />
	<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLInnoDBDialect" />
	<property name="database.driver_class" value="com.mysql.jdbc.Driver" />
	<property name="database.url" value="jdbc:${database.type}://${database.host}/${database.name}?useUnicode=true&amp;amp;characterEncoding=utf-8" />
	<property name="database.show_sql" value="true" />
	<property name="database.schema" value="${database.schema}" />

	<!-- Build and deploy properties -->
	<property environment="env" />
	<property name="env.COMPUTERNAME" value="${env.HOSTNAME}" />

	<property name="tomcat.home" value="D:/tomcat7" />
	<!-- The target directory for building the packed web application -->
	<property name="webapp.dist" value="${dist.dir}/webapps" />
	<!-- The target directory for building the unpacked web application -->
	<property name="webapp.target" value="${build.dir}/${webapp.name}" />
	<property name="webapps.location" value="${webapps.location}" />
	<!-- Should Java compilations set the debug compiler option? -->
	<property name="compile.debug" value="true" />
	<!-- Should Java compilations set the deprecation compiler option? -->
	<property name="compile.deprecation" value="false" />
	<!-- Should Java compilations set the optimize compiler option? -->
	<property name="compile.optimize" value="false" />
	<!-- The source directory for the whole project -->
	<property name="src" value="${basedir}/src" />
	<property name="tar.user" value="ant" />
	<property name="tar.group" value="ant" />
	<property name="tar.mode" value="644" />
	<property name="oracle.dir" value="${oracle.dir}" />
	<property name="jcaptcha.dir" value="${basedir}/lib/jcaptcha-1.0-rc6" />
	<property name="webtest-build1393.dir" value="${basedir}/lib/webtest-build1393/lib" />

	<!-- =================================================================== -->
	<!-- Classpaths                                                          -->
	<!-- =================================================================== -->

	<path id="xdoclet.classpath">
		<pathelement location="${log4j.jar}" />
		<pathelement location="${commons-logging.jar}" />
		<pathelement location="${commons-collections.jar}" />
		<fileset dir="${spring.dir}" includes="acegi*.jar" />
		<fileset dir="${xdoclet.dir}" includes="*.jar" />
		<fileset dir="${velocity.dir}" includes="*.jar" />
	</path>

	<!-- Hibernate -->
	<path id="hibernate.classpath">
		<pathelement location="${hibernate.jar}" />
		<fileset dir="${hibernate.dir}/lib" includes="*.jar" />
		<pathelement location="${database.jar}" />
		<pathelement location="${commons-beanutils.jar}" />
		<pathelement location="${commons-lang.jar}" />
		<path location="${build.dir}/dao/classes" />
	</path>

	<!-- UTIL -->
	<path id="log.compile.classpath">
		<path refid="hibernate.classpath" />
		<pathelement location="${commons-lang.jar}" />
		<pathelement location="${commons-logging.jar}" />
		<pathelement location="${dist.dir}/${webapp.name}-dao.jar" />
		<pathelement location="${commons-dbcp.jar}" />
		<pathelement location="lib/servletapi-2.4/servlet-api.jar" />
		<pathelement location="lib/servletapi-2.4/jsp-api.jar" />
		<pathelement location="${log4j.jar}" />
		<fileset dir="${spring.dir}" includes="*.jar" />
		<fileset dir="${jxl.dir}" includes="*.jar" />
		<fileset dir="${extremecomponents.dir}" includes="*.jar" />
		<fileset dir="${jasperreports.dir}" includes="*.jar" />
		<fileset dir="${javamail.dir}" includes="*.jar" />
		<fileset dir="${jcaptcha.dir}" includes="*.jar" />
		<fileset dir="${mq.dir}" includes="*.jar" />
		<fileset dir="${bill99.dir}" includes="*.jar" />
		<fileset dir="${bill99ms.dir}" includes="*.jar" />
		<fileset dir="${tenpay.dir}" includes="*.jar" />
		<fileset dir="${alipay.dir}" includes="*.jar" />
		<fileset dir="${hitrust.dir}" includes="*.jar" />
		<fileset dir="${usPay.dir}" includes="*.jar" />
		<fileset dir="${ups.dir}" includes="*.jar" />
		<fileset dir="${beanutils.dir}" includes="*.jar" />
	</path>
	<!-- UTIL -->
	<path id="util.compile.classpath">
		<path refid="hibernate.classpath" />
		<pathelement location="${commons-lang.jar}" />
		<pathelement location="${commons-logging.jar}" />
		<pathelement location="${commons-dbcp.jar}" />
		<pathelement location="lib/servletapi-2.4/servlet-api.jar" />
		<pathelement location="lib/servletapi-2.4/jsp-api.jar" />
		<pathelement location="${log4j.jar}" />
		<fileset dir="${spring.dir}" includes="*.jar" />
		<fileset dir="${jxl.dir}" includes="*.jar" />
		<fileset dir="${extremecomponents.dir}" includes="*.jar" />
		<fileset dir="${jasperreports.dir}" includes="*.jar" />
		<fileset dir="${javamail.dir}" includes="*.jar" />
		<fileset dir="${jcaptcha.dir}" includes="*.jar" />
		<fileset dir="${mq.dir}" includes="*.jar" />
		<fileset dir="${bill99.dir}" includes="*.jar" />
		<fileset dir="${smsSDK.dir}" includes="*.jar" />
		<fileset dir="${bill99ms.dir}" includes="*.jar" />
		<fileset dir="${tenpay.dir}" includes="*.jar" />
		<fileset dir="${alipay.dir}" includes="*.jar" />
		<fileset dir="${hitrust.dir}" includes="*.jar" />
		<fileset dir="${usPay.dir}" includes="*.jar" />
		<fileset dir="${jasypt.dir}" includes="*.jar" />
		<fileset dir="${ups.dir}" includes="*.jar" />
		<fileset dir="${freemarker.dir}" includes="*.jar" />
		<fileset dir="${cxf.dir}" includes="*.jar" />
		<fileset dir="${webtest-build1393.dir}" includes="*.jar" />
		<fileset dir="${smssend.dir}" includes="*.jar" />
		<fileset dir="${chinapnr.dir}" includes="*.jar" />
		<fileset dir="${yspay.dir}" includes="*.jar" />
		<fileset dir="${3partlibs.dir}" includes="*.jar" />
		<fileset dir="${httpmsg.dir}" includes="*.jar"/>
		<fileset dir="${druid.dir}" includes="*.jar" />
		<fileset dir="${alisms.dir}" includes="*.jar"/>
		
	</path>

	<!-- DAO -->
	<path id="dao.compile.classpath">
		<path refid="hibernate.classpath" />
		<path refid="util.compile.classpath" />
		<pathelement location="${dist.dir}/${webapp.name}-util.jar" />
		<pathelement location="${commons-lang.jar}" />
		<pathelement location="${commons-logging.jar}" />
		<fileset dir="${spring.dir}" includes="*.jar" />
		<fileset dir="${prizetags.dir}" includes="*.jar" />
		<fileset dir="${ups.dir}" includes="*.jar" />
	</path>
	<path id="dao.test.classpath">
		<path refid="dao.compile.classpath" />
		<pathelement location="${dbunit.jar}" />
		<pathelement location="${junit.jar}" />
		<pathelement location="${commons-collections.jar}" />
		<pathelement location="${log4j.jar}" />
	</path>

	<!-- Service -->
	<path id="service.compile.classpath">
		<path refid="dao.compile.classpath" />
		<pathelement location="${dist.dir}/${webapp.name}-dao.jar" />
		<fileset dir="${javamail.dir}" includes="*.jar" />
		<pathelement location="${commons-beanutils.jar}" />
		<pathelement location="${commons-collections.jar}" />
		<fileset dir="${spring.dir}" includes="*.jar" />
		<fileset dir="${velocity.dir}" includes="*.jar" />
		<fileset dir="${jbossclient.dir}" includes="*.jar" />
		<fileset dir="${jee.dir}" includes="*.jar" />
		<fileset dir="${3partlibs.dir}" includes="*.jar" />
	</path>
	<path id="service.test.classpath">
		<path refid="service.compile.classpath" />
		<pathelement location="${junit.jar}" />
		<pathelement location="${log4j.jar}" />
		<pathelement location="${jakarta-oro.jar}" />
		<pathelement location="${dumbster.jar}" />
		<pathelement location="${jmock.jar}" />
		<path location="test/dao" />
	</path>

	<!-- Web -->
	<path id="web.compile.classpath">
		<path refid="dao.compile.classpath" />
		<pathelement location="${dist.dir}/${webapp.name}-util.jar" />
		<pathelement location="${dist.dir}/${webapp.name}-dao.jar" />
		<pathelement location="${dist.dir}/${webapp.name}-service.jar" />
		<pathelement location="${dist.dir}/${webapp.name}-log.jar" />
		<pathelement location="${strutsmenu.jar}" />
		<pathelement location="${displaytag.jar}" />
		<pathelement location="${jakarta-oro.jar}" />
		<pathelement location="${commons-digester.jar}" />
		<pathelement location="${commons-logging.jar}" />
		<pathelement location="${commons-beanutils.jar}" />
		<pathelement location="${commons-collections.jar}" />
		<pathelement location="${commons-fileupload.jar}" />
		<pathelement location="${commons-lang.jar}" />
		<pathelement location="${commons-validator.jar}" />
		<pathelement location="${servlet-api.jar}" />

		<pathelement location="${clickstream.jar}" />
		<fileset dir="${3partlibs.dir}" includes="*.jar" />
		<fileset dir="${fckeditor.dir}" includes="*.jar" />
		<fileset dir="${jcaptcha.dir}" includes="*.jar" />
		<fileset dir="${javamail.dir}" includes="*.jar" />
		<fileset dir="${spring.dir}" includes="*.jar" />
		<fileset dir="${jsp2.jstl.dir}/lib" includes="*.jar" />
		<fileset dir="${extremecomponents.dir}" includes="*.jar" />
		<fileset dir="${javacsv.dir}" includes="*.jar" />
		<fileset dir="${prizetags.dir}" includes="*.jar" />
		<fileset dir="${jasperreports.dir}" includes="*.jar" />
		<fileset dir="${jfreechart.dir}" includes="*.jar" />
		<fileset dir="${excelutils.dir}" includes="*.jar" />
		<fileset dir="${open-cvs.dir}" includes="*.jar" />
		<fileset dir="${itext.dir}" includes="*.jar" />
		<fileset dir="${mq.dir}" includes="*.jar" />

		<fileset dir="${InforReport.dir}" includes="*.jar" />
		<fileset dir="${interface.dir}" includes="*.jar" />
		<fileset dir="${jee.dir}" includes="*.jar" />
		<fileset dir="${ups.dir}" includes="*.jar" />
		<fileset dir="${wecs-ups.dir}" includes="*.jar" />
		<fileset dir="${dwr.dir}" includes="*.jar" />
	</path>
	<path id="web.test.classpath">
		<path refid="web.compile.classpath" />
		<path refid="service.test.classpath" />
		<pathelement location="${strutstestcase.jar}" />
		<fileset dir="${webtest.dir}/lib" includes="*.jar" />
	</path>

	<path id="jspc.classpath">
		<path refid="dao.compile.classpath" />
		<pathelement location="${commons-logging.jar}" />
		<pathelement location="${commons-validator.jar}" />
		<pathelement location="${clickstream.jar}" />
		<pathelement location="${displaytag.jar}" />
		<pathelement location="${sitemesh.jar}" />
		<pathelement location="${strutsmenu.jar}" />
		<fileset dir="${jstl.dir}/lib" includes="*.jar" />
		<fileset dir="${jsp2.jstl.dir}/lib" includes="*.jar" />
		<fileset dir="${spring.dir}" includes="*.jar" />
		<fileset dir="${tomcat.home}/common/lib" includes="*.jar" />
		<path location="${build.dir}/web/classes" />
	</path>

	<path id="emma.libs">
		<pathelement location="${emma.dir}/emma.jar" />
		<pathelement location="${emma.dir}/emma_ant.jar" />
	</path>

	<path id="all.sources">
		<pathelement path="src/util" />
		<pathelement path="src/dao" />
		<pathelement path="src/service" />
		<pathelement path="src/web" />
	</path>

	<taskdef resource="emma_ant.properties" classpathref="emma.libs" />

	<property name="inheritAll" value="true" />

	<!-- this macro is called by tasks that depend on a database.properties -->
	<macrodef name="generate-database-properties">
		<sequential>
			<echo>generating database.properties from build.properties</echo>
			<propertyfile comment="Hibernate Configuration for JUnit tests" file="${basedir}/database.properties">
				<entry key="hibernate.dialect" value="${hibernate.dialect}" />
				<entry key="hibernate.connection.driver_class" value="${database.driver_class}" />
				<entry key="hibernate.connection.url" value="${database.url}" />
				<entry key="hibernate.connection.username" value="${database.username}" />
				<entry key="hibernate.connection.password" value="${database.password}" />
				<entry key="hibernate.connection.show_sql" value="${database.show_sql}" />
				<entry key="dao.type" value="${dao.type}" />
			</propertyfile>
			<replace file="database.properties" token="amp;" value="" />
			<property file="database.properties" />
		</sequential>
	</macrodef>

</project>
